(window.webpackJsonp=window.webpackJsonp||[]).push([[71],{722:function(e,t,a){"use strict";a.r(t);var o=a(0),s=Object(o.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"upgrade-your-node"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#upgrade-your-node"}},[e._v("#")]),e._v(" Upgrade Your Node")]),e._v(" "),a("p",[e._v("This document describes the upgrade procedure of a "),a("code",[e._v("gaiad")]),e._v(" full-node to a new version.")]),e._v(" "),a("h2",{attrs:{id:"software-upgrade"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#software-upgrade"}},[e._v("#")]),e._v(" Software Upgrade")]),e._v(" "),a("p",[e._v("First, stop your instance of "),a("code",[e._v("gaiad")]),e._v(". Next, upgrade the software:")]),e._v(" "),a("tm-code-block",{staticClass:"codeblock",attrs:{language:"bash",base64:"Y2QgZ2FpYQpnaXQgZmV0Y2ggLS1hbGwgJmFtcDsmYW1wOyBnaXQgY2hlY2tvdXQgJmx0O25ld192ZXJzaW9uJmd0OwptYWtlIGluc3RhbGwK"}}),e._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",[a("em",[e._v("NOTE")]),e._v(": If you have issues at this step, please check that you have the latest stable version of GO installed.")])]),e._v(" "),a("p",[e._v("See the "),a("a",{attrs:{href:"https://github.com/cosmos/testnets",target:"_blank",rel:"noopener noreferrer"}},[e._v("testnet repo"),a("OutboundLink")],1),e._v(" for details on which version is needed for which public testnet, and the "),a("a",{attrs:{href:"https://github.com/cosmos/Gaia/releases",target:"_blank",rel:"noopener noreferrer"}},[e._v("Gaia release page"),a("OutboundLink")],1),e._v(" for details on each release.")]),e._v(" "),a("p",[e._v("Your full node has been cleanly upgraded!")]),e._v(" "),a("h2",{attrs:{id:"upgrade-genesis-file"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#upgrade-genesis-file"}},[e._v("#")]),e._v(" Upgrade Genesis File")]),e._v(" "),a("div",{staticClass:"custom-block warning"},[a("p",[e._v("If the new version you are upgrading to has breaking changes, you will have to restart your chain. If it is not breaking, you can skip to "),a("a",{attrs:{href:"#restart"}},[e._v("Restart")])])]),e._v(" "),a("p",[e._v("To upgrade the genesis file, you can either fetch it from a trusted source or export it locally.")]),e._v(" "),a("h3",{attrs:{id:"fetching-from-a-trusted-source"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#fetching-from-a-trusted-source"}},[e._v("#")]),e._v(" Fetching from a Trusted Source")]),e._v(" "),a("p",[e._v("If you are joining the mainnet, fetch the genesis from the "),a("a",{attrs:{href:"https://github.com/cosmos/launch",target:"_blank",rel:"noopener noreferrer"}},[e._v("mainnet repo"),a("OutboundLink")],1),e._v(". If you are joining a public testnet, fetch the genesis from the appropriate testnet in the "),a("a",{attrs:{href:"https://github.com/cosmos/testnets",target:"_blank",rel:"noopener noreferrer"}},[e._v("testnet repo"),a("OutboundLink")],1),e._v(". Otherwise, fetch it from your trusted source.")]),e._v(" "),a("p",[e._v("Save the new genesis as "),a("code",[e._v("new_genesis.json")]),e._v(". Then replace the old "),a("code",[e._v("genesis.json")]),e._v(" with "),a("code",[e._v("new_genesis.json")])]),e._v(" "),a("tm-code-block",{staticClass:"codeblock",attrs:{language:"bash",base64:"Y2QgJEhPTUUvLmdhaWFkL2NvbmZpZwpjcCAtZiBnZW5lc2lzLmpzb24gbmV3X2dlbmVzaXMuanNvbgptdiBuZXdfZ2VuZXNpcy5qc29uIGdlbmVzaXMuanNvbgo="}}),e._v(" "),a("p",[e._v("Then, go to the "),a("a",{attrs:{href:"#reset-data"}},[e._v("reset data")]),e._v(" section.")]),e._v(" "),a("h3",{attrs:{id:"exporting-state-to-a-new-genesis-locally"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#exporting-state-to-a-new-genesis-locally"}},[e._v("#")]),e._v(" Exporting State to a New Genesis Locally")]),e._v(" "),a("p",[e._v("If you were running a node in the previous version of the network and want to build your new genesis locally from a state of this previous network, use the following command:")]),e._v(" "),a("tm-code-block",{staticClass:"codeblock",attrs:{language:"bash",base64:"Y2QgJEhPTUUvLmdhaWFkL2NvbmZpZwpnYWlhZCBleHBvcnQgLS1mb3ItemVyby1oZWlnaHQgLS1oZWlnaHQ9Jmx0O2V4cG9ydC1oZWlnaHQmZ3Q7ICZndDsgbmV3X2dlbmVzaXMuanNvbgo="}}),e._v(" "),a("p",[e._v("The command above take a state at a certain height "),a("code",[e._v("<export-height>")]),e._v(" and turns it into a new genesis file that can be used to start a new network.")]),e._v(" "),a("p",[e._v("Then, replace the old "),a("code",[e._v("genesis.json")]),e._v(" with "),a("code",[e._v("new_genesis.json")]),e._v(".")]),e._v(" "),a("tm-code-block",{staticClass:"codeblock",attrs:{language:"bash",base64:"Y3AgLWYgZ2VuZXNpcy5qc29uIG5ld19nZW5lc2lzLmpzb24KbXYgbmV3X2dlbmVzaXMuanNvbiBnZW5lc2lzLmpzb24K"}}),e._v(" "),a("p",[e._v("At this point, you might want to run a script to update the exported genesis into a genesis that is compatible with your new version. For example, the attributes of a the "),a("code",[e._v("Account")]),e._v(" type changed, a script should query encoded account from the account store, unmarshall them, update their type, re-marshal and re-store them. You can find an example of such script "),a("a",{attrs:{href:"https://github.com/cosmos/cosmos-sdk/blob/02c6c9fafd58da88550ab4d7d494724a477c8a68/contrib/migrate/v0.33.x-to-v0.34.0.py",target:"_blank",rel:"noopener noreferrer"}},[e._v("here"),a("OutboundLink")],1),e._v(".")]),e._v(" "),a("h2",{attrs:{id:"reset-data"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#reset-data"}},[e._v("#")]),e._v(" Reset Data")]),e._v(" "),a("div",{staticClass:"custom-block warning"},[a("p",[e._v("If the version <new_version> you are upgrading to is not breaking from the previous one, you should not reset the data. If it is not breaking, you can skip to "),a("a",{attrs:{href:"#restart"}},[e._v("Restart")])])]),e._v(" "),a("div",{staticClass:"custom-block warning"},[a("p",[e._v("If you are running a "),a("strong",[e._v("validator node")]),e._v(" on the mainnet, always be careful when doing "),a("code",[e._v("gaiad unsafe-reset-all")]),e._v(". You should never use this command if you are not switching "),a("code",[e._v("chain-id")]),e._v(".")])]),e._v(" "),a("div",{staticClass:"custom-block danger"},[a("p",{staticClass:"custom-block-title"},[e._v("IMPORTANT")]),e._v(" "),a("p",[e._v("Make sure that every node has a unique "),a("code",[e._v("priv_validator.json")]),e._v(". Do not copy the "),a("code",[e._v("priv_validator.json")]),e._v(" from an old node to multiple new nodes. Running two nodes with the same "),a("code",[e._v("priv_validator.json")]),e._v(" will cause you to get slashed due to double sign !")])]),e._v(" "),a("p",[e._v("First, remove the outdated files and reset the data. "),a("strong",[e._v("If you are running a validator node, make sure you understand what you are doing before resetting")]),e._v(".")]),e._v(" "),a("tm-code-block",{staticClass:"codeblock",attrs:{language:"bash",base64:"Z2FpYWQgdW5zYWZlLXJlc2V0LWFsbAo="}}),e._v(" "),a("p",[e._v("Your node is now in a pristine state while keeping the original "),a("code",[e._v("priv_validator.json")]),e._v(" and "),a("code",[e._v("config.toml")]),e._v(". If you had any sentry nodes or full nodes setup before, your node will still try to connect to them, but may fail if they haven't also been upgraded.")]),e._v(" "),a("h2",{attrs:{id:"restart"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#restart"}},[e._v("#")]),e._v(" Restart")]),e._v(" "),a("p",[e._v("To restart your node, just type:")]),e._v(" "),a("tm-code-block",{staticClass:"codeblock",attrs:{language:"bash",base64:"Z2FpYWQgc3RhcnQK"}})],1)}),[],!1,null,null,null);t.default=s.exports}}]);